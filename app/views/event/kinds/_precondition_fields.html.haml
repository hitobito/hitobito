-#  Copyright (c) 2025, Hitobito AG. This file is part of
-#  hitobito and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito.

= f.labeled(Event::Kind.human_attribute_name(:preconditions)) do
  - kinds = entry.qualification_kinds("precondition", "participant").group_by(&:id)

  #precondition_summary{data: { and: t("event.kinds.qualifications.and"),
                                 or: t("event.kinds.qualifications.or"),
                                 validity_valid: t("activerecord.attributes.event/kind_qualification_kinds.validities.valid"),
                                 validity_valid_or_reactivatable: t("activerecord.attributes.event/kind_qualification_kinds.validities.valid_or_reactivatable"),
                                 validity_valid_or_expired: t("activerecord.attributes.event/kind_qualification_kinds.validities.valid_or_expired")} }
    - entry.grouped_qualification_kind_ids_and_validity("precondition", "participant").each_with_index do |ids, index|
      .precondition-grouping.row.mt-2
        - ids.each do |id|
          = hidden_field_tag("event_kind[precondition_qualification_kinds][#{index}][qualification_kind_ids][]", id[0])

        - if index > 0
          %span.muted= t("event.kinds.qualifications.or")
        %div
          = ids.collect { |id| kinds[id[0]].first.to_s }.sort.to_sentence
          = link_to(icon(:"trash-alt", filled: false), "#", class: "remove-precondition-grouping")

        %label.radio.precondition-validity{for: "event_kind_precondition_qualification_kinds_#{index}_validity_valid"}
          = radio_button_tag("event_kind[precondition_qualification_kinds][#{index}][validity]", "valid", ids.first.last == "valid")
          = t("activerecord.attributes.event/kind_qualification_kinds.validities.valid")
        %label.radio.precondition-validity{for: "event_kind_precondition_qualification_kinds_#{index}_validity_valid_or_reactivatable"}
          = radio_button_tag("event_kind[precondition_qualification_kinds][#{index}][validity]", "valid_or_reactivatable", ids.first.last == "valid_or_reactivatable")
          = t("activerecord.attributes.event/kind_qualification_kinds.validities.valid_or_reactivatable")
        %label.radio.precondition-validity{for: "event_kind_precondition_qualification_kinds_#{index}_validity_valid_or_expired"}
          = radio_button_tag("event_kind[precondition_qualification_kinds][#{index}][validity]", "valid_or_expired", ids.first.last == "valid_or_expired")
          = t("activerecord.attributes.event/kind_qualification_kinds.validities.valid_or_expired")

    #add_precondition_grouping.mt-2
      = link_to(t(".add_precondition_grouping"), "#")

  #precondition_fields.hide.mt-2
    = select_tag("event_kind_precondition_kind_ids",
                 options_from_collection_for_select(@preconditions, :id, :to_s),
                 multiple: true,
                 class: "form-select form-select-sm",
                 data: { chosen_no_results: t("global.chosen_no_results"),
                         placeholder: " ",
                        controller: "tom-select" } )
    .help-block.mt-1
      .btn-group
        = button_tag(t(".add_precondition"), class: "btn btn-sm btn-default btn-primary")
      = link_to(t("global.button.cancel"), "#", class: "link cancel")
