en:
  global:
    'yes': "yes"
    'no': "no"
    ok: OK
    unknown: unknown
    nobody: nobody
    all: all
    from: from
    until: to
    no_list_entries: No entries found.
    confirm_delete: Do you really want to delete this entry?
    do_not_fill: Please do not fill in this field
    selected: selected
    columns: Columns
    start_on: from%{date}
    not_allowed: "insufficient permissions"
    gender:
      male: male
      female: female
      male_short: m
      female_short: f
    associations:
      no_entry: (none)
      none_available: (none available)
      please_select: Please select
      add: Add an entry
      remove: Remove
      not_allowed: Not allowed
      deleted_entry: Deleted Entry %{class_name} (#%{class_id})
    button:
      save: Save
      add: Add
      add_another: Save and add more
      cancel: Cancel
      close: close
      search: Search
      back: Back
      refresh: Update
      print: Print
      copy: Copy
      next: Next
    link:
      show: Show
      edit: Edit
      add: Create
      delete: Delete
      list: List
    errors:
      header:
        one: "%{count} error prevented the saving of this post:"
        other: "%{count} errors prevented the saving of this post:"
    tabs:
      info: Info
      settings: Settings
    search:
      placeholder: "Search..."
      placeholder_person: "Search person..."
      placeholder_group: "Search group..."
      placeholder_event: "Search event..."
      placeholder_company_name: "search company name..."
  list:
    index:
      title: "Listing %{models}"
  crud:
    show:
      title: "%{model}"
    new:
      title: "New %{model}"
    edit:
      title: "Edit %{model}"
    create:
      flash:
        success: "%{model} was successfully created."
    update:
      flash:
        success: "%{model} was successfully updated."
    destroy:
      flash:
        success: "%{model} was successfully deleted."
        failure: "%{model} could not be deleted."
  modal_crud:
    show:
      title: "%{model}"
    new:
      title: "New %{model}"
    edit:
      title: "Edit %{model}"
    create:
      flash:
        success: "%{model} was successfully created."
    update:
      flash:
        success: "%{model} was successfully updated."
    destroy:
      flash:
        success: "%{model} was successfully deleted."
        failure: "%{model} could not be deleted."
  blocked:
    index:
      title: Login blocked
  changelog:
    index:
      meta_description: Hitobito Changelog page
  contactable:
    address_or_email: "%{address} or %{email}"
    fields:
      zip_town: Postal code/place
    public_check_box:
      tooltip: 'Private entries are visible only to your own group. If you are a group leader, entries marked as public are visible to leaders of other groups. '
    social_account_fields:
      placeholder_value: Website, Skype-name, other profiles...
      placeholder_type: Type (Skype, Facebook, ...)
    additional_email_fields:
      placeholder_value: E-Mail
      placeholder_type: Designation (Home, Work, ...)
      tooltip_mailings: Shipments of subscriptions, confirmations via e-mail, etc. will be sent in addition to all addresses selected here.
    address_fields:
      updates_household_address: address will be updated for the household
  custom_content_decorator:
    available_placeholders: "Available placeholders: %{placeholders}"
    available_placeholders_empty: "No placeholders available"
  dropdown:
    last_used: "last used"
  dropdown/event/group_filter:
    all_groups: "All groups"
  dropdown/event/events_export:
    button: Export
    csv: CSV
    xlsx: Excel
  dropdown/event/role_add:
    add: "Add person"
  dropdown/event/invitation_add:
    add: "Invite person"
  dropdown/event/participant_add:
    as: "as %{role}"
  dropdown/group_edit:
    move: "Move"
    merge: "Merge"
    archive: "Archive"
  dropdown/people_export:
    button: "Export"
    csv: "CSV"
    xlsx: "Excel"
    vcard: "vCard"
    labels: "Labels"
    pdf: "PDF"
    emails: "E-Mail addresses"
    emails_outlook: "E-Mail addresses (Outlook)"
    addresses: "Address list"
    households: "Households"
    everything: "All information"
    household_option: "Condense households"
    selection: "Column selection"
  dropdown/people_login:
    button: "Login"
    send_login: Send login
    activate_totp: Set up two-factor authentication
    reset_totp: Reset two-factor authentication
    disable_totp: Disable two-factor authentication
    unblock_person: Unblock Login
  dropdown/invoices:
    download: "export"
    print: "print"
    labels: "labels"
    full: "Invoice with payment slip"
    esr_only: "Payment slip separattely"
    articles_only: "Invoice separately"
    csv: "CSV"
    pdf: "PSD"
    payments_without_invoice_csv: "Non-matched payments"
  dropdown/invoice_new:
    invoice: "Invoice"
  dropdown/invoice_sending:
    button: "Send invoice/reminder"
    set_state: "Set status (sent/reminded)"
    send_mail: "Set status and send per e-mail"
  dropdown/letter_with_invoice:
    print: Print
    letters_with_invoice: Invoice letters
  dropdown/letter_with_invoice_new:
    invoice: "Invoice"
  dropdown/invoices/evaluation:
    download: "Export"
    csv: "CSV"
    xlsx: "XLSX"
  devise:
    failure:
      already_authenticated: "You are already registered."
      unauthenticated: "You need to login or register before you can continue."
      unconfirmed: "You need to confirm your account before you can proceed."
      last_attempt: "You have one more try before your account is blocked."
      locked: "Your account is locked for 1 hour."
      invalid: "Invalid login credentials."
      invalid_token: "The logon token is invalid."
      timeout: "Your session has expired, please log in again."
      inactive: "Your account is not active."
      not_found_in_database: "Invalid login credentials."
      not_permitted_to_view_page: "You are not authorized to view this page"
    sessions:
      signed_out: "You are now logged out."
      new:
        sign_in: Sign in
        meta_description: Login page for Hitobito
      form:
        login_identity: Main email
        sign_in: Sign in
      oauth_info:
        sign_in: "Log in with %{name}"
        info: "Please sign in to proceed to %{oauth_app}"
    passwords:
      updated: "Your password has been changed. You're now logged in."
      updated_not_active: "Your password has been changed."
      send_paranoid_instructions: "If your e-mail address exist in our database, you will receive in a few minutes an e-mail with instructions on how to reset your password."
      no_token: "You can only access this page by clicking the link provided in a password reset email. If you have copied the link from a password reset email, please make sure you copied the entire URL provided."
      new:
        reset_password_button: "Reset password"
        meta_description: Hitobito password reset page
    confirmations:
      new:
        resend_confirmation_instructions: "Confirm email address"
        submit: "Send confirmation email"
      send_instructions: "You will receive an email in a few minutes to confirm your email address."
      send_paranoid_instructions: "If your email address exists in our database, you will receive an email in a few minutes to confirm it."
      confirmed: "Thank you for confirming your email address. You can register now."
    unlocks:
      send_instructions: "In a few minutes, you'll receive an e-mail with instructions how to unlock your account."
      unlocked: "Your account has been successfully unlocked."
      send_paranoid_instructions: "If your e-mail address exist in our database, you will receive in a few minutes an e-mail with instructions on how to unlock your account."
    omniauth_callbacks:
      success: "You have successfully logged in to your %{kind} account."
      failure: 'You couldn''t login to your %{kind} account because "%{reason}".'
    registrations:
      signed_up: "You have registered successfully."
      signed_up_but_unconfirmed: "You have registered successfully. You will receive an email shortly  with instructions on how to activate your account."
      updated: "Your password has been updated."
      update_needs_confirmation: "Your information has been updated, but you must confirm your new email address. An email will be sent to you shortly which you must complete to finalize the change."
      destroyed: "Your account has been deleted."
      edit:
        change_password: "Change password"
        set_password: "Set password"
        old_password: "Old password"
        new_password: "New password"
        new_password_confirmation: "Confirm new password"
        meta_description: "Hitobito password change page"
      person:
        updated: "Your password has been updated."
    mailer:
      confirmation_instructions:
        subject: "Instructions for confirming your email address"
        body:
          greeting: "Hello %{name}!"
          information_html: "You can confirm your email address using the following link:"
          link_text: "confirm %{email}"
          footer: "This email was sent by %{application_name}"
      reset_password_instructions:
        subject: "Instructions for setting your password"
        body:
          greeting: "%{name}Hello !"
          reset_instructions:
            with_password: "You can reset your %{application_name} password using the following link."
            without_password_html: "Welcome to %{application_name}! You have been newly registered and have received a login.<br>Please set a password using the following link."
          ignore_information_html: "If you do not want to change your password, you can ignore this email.<br><br>Your password will not change unless you go to the link above and set a new password there."

      unlock_instructions:
        subject: "Instruction for unlocking your account."
        body:
          greeting: "Hello %{name}!"
          information_html: "Your account has been locked due to too many failed login attempts.<br>Click on the following link to unlock your account:</br>"
          link_text: "Unlock my account"
          footer: "This email was sent by %{application_name}"
  errors:
    link_to_main: "Main page"
    '401':
      title: "Login required"
      explanation: "You must log in before you can access this resource."
    '403':
      title: "Access denied"
      explanation: "You are not authorized to access this resource."
    '404':
      title: "Page not found (404)"
      explanation: "Maybe you typed the address incorrectly, or the page has been deleted."
    '500':
      title: "Sorry, something went wrong (500)"
      explanation: "We have received a message and will look at the problem as quickly as possible."
    '503':
      title: "Sorry, page is currently not available (503)"
      explanation: "We are working on this page, so it is not available. This should not take too long."
      instruction: "Please try again later."
    unsupported_page_size:
      title: "Page size is not supported"
  export/tabular/events/list:
    group_names: "Organizers"
    duration: Duration
    date: "Date %{index}"
  event:
    run_by: "Operated by"
    applied_to: Registration to
    alternative_dates: Alternative dates
    priorities: "Application priorities"
    lists:
      courses:
        title: "Available Initiatives"
        no_category: Other Initiatives
        explanation: "Initiatives of your group and their top groups are shown here. Other courses you'll find in the organizing group."
        csv_export_button: "CSV export"
        ical_export_button: "calendar export"
      events:
        title: "Next events"
        explanation: "Events of your groups and their top groups are shown here. Other events you'll find in the organizing group."
      apply_until: "until %{date}"
    application_market:
      already_assigned: "This person was already assigned or registered for a different event."
      participation:
        registered_at: "Registration on %{datetime}"
        town: town
      prio_buttons:
        national_waitinglist: "national waiting list"
      index:
        assigned_participants: "allocated participants"
        add_participant: Add participant
      waiting_list_link:
        title_active: "Remove from waiting list"
        title_inactive: "Add to waiting list"
        label: "national waiting list"
      popover_waiting_list:
        waiting_list_info: Put this person on the waiting list for courses of of %{event_kind}.
    attachments:
      create:
        failure: "Upload failed: %{errors}."
      destroy:
        failure: "Failed to delete: %{errors}."
      update:
        failure: "Upload failed: %{errors}."
    kinds:
      form:
        help_minimum_age: "Years (vintage on the first course date is decisive)"
        qualifications:
          for_participants: "Qualifications for participants"
          for_leaders: "Qualifications for leaders"
      precondition_fields:
        add_precondition_grouping: "+ add precondition"
        add_precondition: "add"
      qualifications:
        or: or
        and: and
    participation_contact_datas:
      edit:
        title: Contact details of the participating person
        wizard_title: Contact data
        save: Next
      update:
        flash:
          privacy_policy_not_accepted: "To complete the registration, you must agree to the data protection declaration."
    participations:
      edit:
        title: Registration
      approvals:
        title: Approval
      specific_information: "Specific information"
      application_answers: Registration details
      admin_answers: Administration
      no_answer_given: "(not answered)"
      actions_show:
        change_contact_data_button: "Change contact data"
      actions_approval:
        approve_button: "Approve"
        reject_button: "Decline"
      form:
        title_new: "Register as %{role}"
        title_edit: "Edit registration from %{person}"
        apply: "Register"
        explain_required_checkmark: "* = Reply mandatory"
      application_fields:
        alternative_dates_info: "Please enter more suitable courses."
        course_information: "Information about the courses"
      print:
        signature: Signature
        signature_confirmation: First name, last name, signature
        heading_event/course: Course application %{year}
        heading_event: Registration for event
        read_and_agreed_for_event: I meet the requirements for the event, have read the event description and agree to them.
        read_and_agreed_for_event_course: I meet the course prerequisites, have read the course description and course regulations and agree to them.
        requirements_for_event: Requirements for the event
        requirements_for_event_course: Prerequisites for the course
        page_of_pages: "Page <page> from <total>"
      priorities:
        on_waiting_list: On waiting list
      list:
        incomplete: Required data is missing
      cancel_application:
        explanation: You are registered for this event.
        pending: You are pre-registered for this event. The registration is not yet final and must be confirmed by the organizer.
        waiting_list: You are on the waiting list for this event.
        caption: Cancel registration
        confirmation: "Are you sure, that you want to cancel your registration?"
    qualifications:
      index:
        save: Update qualifications
      update:
        flash:
          success: Qualifications succesfully updated
    register:
      register:
        title: Contact details of the participating person
        flash:
          privacy_policy_not_accepted: To complete the registration, you must agree to the data protection declaration.
      index:
        sign_in: Register
        login: Login
        no_login: Do not have a Login?
      email_check:
        next: Further
        enter_email: Please enter your email address so you can register for the event.
    participation_lists:
      create:
        success:
          one: "One person added sucessfully to %{event_type}%{event}"
          other: "%{count}persons added succesfully to %{event_type}%{event}"
      new:
        title: Assign persons to %{event_label}
        event_search: Search event...
        submit: add
  assignments:
    attachment: "Show attachment"
    form:
      attachment:
        subject: "Subject"
  second_factor_authentication:
    flash:
      success:
        registered: Two-factor authentication successfully activated
        signed_in: Successfully logged in
      failure: One-Time Code incorrect
    new:
      title: Two-factor authentication
      copy_secret: "Here"
    form:
      totp_code: One-Time Code
      submit: Send
  events:
    courses:
      filter:
        places_available:
          all: All
          only_with_places_available: Only with available seats          
        select_states: Filter by status
        time_period: Period (optional)
        until: To
      group_filter:
        all_layers: All groups
        filter_by_layer: Organizer
        select_layers: Search groups...
    actions_show:
      copy_share_link: Copy direct link
    application_fields:
      caption_signature: Participants must sign the application
      caption_signature_confirmation: Application must be confirmed with a second signature
      signature_confirmation_text_default: Legal guardian (for minors)
    attachments:
      public_attachments_hint: Globally visible attachments are public because the event allows external registrations
      add: "add"
    banner_open_invitation:
      explanation: You've been invited to this event.
      buttons:
        accept: Register
        decline: Cancel registration
    form:
      caption_external_applications: "Externals can sign up for this event"
      caption_prioritization: "Participants may set two additional courses as alternatives."
      caption_requires_approval: "The group leader will be informed and has to confirm your registration."
      caption_participations_visible: "Participants can see each other in the participants list."
      times_are_optional: Times are optional
      explain_application_questions: Here you can request further information for the application.
      explain_choices: Leave blank for free text answer, one or more answer choices (comma separated) for selection.
      explain_admin_questions:
        Here you can define additional information per participant,
        which will only be used for event management.

      explain_contact_attrs: Here you can choose which contact details should be requested during registration.
      caption_applications_cancelable: Participants can cancel their registration.
      caption_display_booking_info: The number of registrations/places is visible on the course list for all
      caption_globally_visible: "%{model_name} is visible for the whole database"
      caption_automatic_assignment:
        Volunteers will be automatically registered if
        there are still spots available.
      caption_waiting_list:
        If all spots are filled, new registrations
        will be placed on a waiting list
      label_notify_contact_on_participations: Notification

    form_tabs:
      general: General
      application_questions: Registration details
      admin_questions: Administration
      contact_attrs: Contact data
    global:
      link:
        add_event: Create event
        add_event/course: Create course
        duplicate: Duplicate
    minimum_age_with_years: "%{minimum_age} years (vintage)"
    new:
      title_event: Create event
      title_event/course: Create course
    preconditions: "Required qualifications"
    tabs:
      participants: "Participants"
    export_enqueued: "Export is started in the background and downloaded after completion."
    add_tag: Add tag
  event/applications:
    approved: "The application was approved."
    rejected: "The application was declined."
    directly_to_waiting_list: "All places are taken, so registration is directly on the waiting list."
  event/application_decorator:
    approval:
      approved: "Course approval confirmed"
      rejected: "Course approval declined"
      missing: "Course approval due"
  event/kinds:
    global:
      link:
        add: Create course kind
    new:
      title: Create course kind
  event/participations:
    full_entry_label: "%{model_label} from <i>%{person}</i> in <i>%{event}</i>"
    success: "%{full_entry_label} has successfully been created. Please check the contact data, and update them if necessary."
    instructions: "For the definite registration you have to print the confirmation of participation by<i>printing</i>, sign it and send it by mail to the corresponding address."
    export_enqueued: "Export is started in the background and downloaded after completion."
    waiting_list: "All places are currently taken, registration is on the waiting list."
    pending: "A pre-registration for %{full_entry_label} has been created. Participation is not yet final and must be confirmed by the event management."
    show:
      link:
        delete: "Delete application"
  event/participation_decorator:
    tooltips:
      ok: "Markes course as passed and awards qualifications."
      remove: "Markes course as not passed and removes qualifications."
  event/precondition_checker:
    preconditions_not_fulfilled: "<b>Prerequisites for registration are not met.</ b>"
    below_minimum_age: "Age limit falls below %{course_minimum_age}"
    qualifications_missing: "The following qualifications are missing or have expired: %{missing}"
    some_qualifications_missing: "Missing required qualifications"
  event/register:
    not_logged_in: "You must log in for the registration of the event '%{event}'. "
    person_found: "We found you in our database."
    email_sent: "We have sent you an e-mail with a link where you can sign up directly for the event."
    email_invalid: "Please enter a valid e-mail"
    form_data_missing: "Please fill out the form below before signing up for the event."
    registered: "Your personal data are recorded. Please set now the information for the application."
    application_window_closed: "The login window for this event is closed."
  event/roles:
    full_entry_label: "Role <i>%{role}</i> for <i>%{person}</i>"
  event_decorator:
    apply: "Register"
    applied: "Registered"
    not_possible: "not possible"
    participants_info:
      one: "%{count} registered"
      other: "%{count} registered"
    participants_info_with_limit:
      one: "%{count} registered for %{limit} place"
      other: "%{count} registered for %{limit} places"
    active_participants_info:
      one: "%{count} assigned registration"
      other: "%{count} assigned registrations"
    issue_only: "Grants %{model}%{issued}after %{until}(date of last course)."
    prolong_only:
      one: "Prolongs existing qualification %{prolonged}after %{until}."
      other: "Prolongs existing qualification %{prolonged} after %{until}."
    issue_and_prolong: "Grants %{model}%{issued}and prolongs existing qualifications %{prolonged}after %{until}."
  event_feeds:
    integrate: Integrate into calendar
    show:
      title: 'Integrate my events into calendars '
      url: "URL: %{url}"
      create_url: Create address
      url_description: "With this address you can access your events from other applications. Note: Only share this address with people who are allowed to see all your event details."
      reset_url: Reset URL
      reset_url_description: "If you suspect abuse, you can reset the address and thus make the current one invalid. All calendars that still know the old address will no longer be able to see your events."
    update:
      flash:
        create: Address was created.
        reset: Address has been updated.
  filter_navigation/dropdown:
    additional_views: "Further views"
  filter_navigation/people:
    custom_filter: "Own filter"
    entire_layer: "Whole level"
    entire_group: "Whole group"
    new_filter: "New filter..."
    duplicates: "Duplicates"
  filter_navigation/events:
    all: "all"
    layer: "only %{layer}"
  filter_navigation/event/participations:
    predefined_filters:
      all: All people
      teamers: Leaders
      participants: Participants
  full_text:
    index:
      title: "results"
  group:
    merge:
      select:
        title: "Merge %{group} "
        explanation: >
            When merging two groups, all the subgroups, events and people including
            their roles will be merged. Subscriptions will not be merged. All former
            groups will still be visible under 'Deleted'.
        merge_is_irreversible: This process cannot be undone!
        new_group_name: "Name of the merged group"
        merge_group_with: "Merge %{group} with"
        merge_button: "Merge group"
    move:
      select:
        title: "Move group"
        select_group: "Please pick the target group that will contain the current group."
    person_add_requests:
      actions_index:
        activate: Activate manual approval
        deactivate: Deactivate
        activate_title: Activate manual approval
        deactivate_title: Deactivate manual approval
      index:
        activated: Manual approval is active
        deactivated: Manual approval is not active
        explanation: >
            When active people from this layer will only be added to other groups,
            events or subscriptions after an authorized person has given his/her approval.
      list:
        approve: Accept
        reject: Deny
      approvers:
        title: "Notifications to"
  groups:
    actions_show:
      export_subgroups: "CSV subgroups"
      reactivate: "Reactivate"
      confirm_archive: >
        Do you really want to archive this group? It will no longer be
        editable and all roles will also be archived.
    attrs:
      contact_details: "Contact data"
      additional_information: "More information"
    deleted_subgroups:
      no_deleted_sub_groups: "No deleted groups found."
    form:
      help_contact: "Use public address and telephone number of this person."
      help_self_registration_require_adult_consent: When registering, check whether the person is already 18 years old or has the consent of their legal guardian.
      help_main_self_registration_group: "Display this group's registration link on the main login page."
      hint_external_registration: "No roles with rights can be selected"
    form_tabs:
      general: "General"
      messages: "Messages"
    global:
      link:
        add: Create group
        deleted_person: Without roles
    new:
      title: "Create %{model}"
    reactivated: "Group <i>%{group}</ i> has been successfully reactivated."
    subgroups: "Member Roles"
    tabs:
      deleted: "Deleted"
      statistics: "Statistics"
      logs: Log
    export_enqueued: "Export is started in the background and downloaded after completion."
    statistics:
      title: Statistics
      description: "%{subject}in %{groups} "
      year: Year
      age: Age
      count: Number
      distribution: Distribution
    self_registration:
      show:
        meta_description: Self-registration page for Hitobito
      form:
        privacy_policy_caption: "I agree to the following provisions:"
        submit: Register
        has_account: Do you already have a login?
        to_login_page: Click here to log in
      main_person:
        notes: Remarks
      adult_consent_field:
        caption: "I accept these %{terms_link}. I also confirm that I am at least 18 years old or have the consent of my legal guardian."
        terms: "terms and conditions"
      create:
        email_taken: Email is already in use. Log in or register with a different email address.
        flash:
          privacy_policy_not_accepted: To complete the registration, you must agree to the data protection declaration.
    self_inscription:
      show:
        role_exists: You already have this role in this group.
        disabled: Self-registration is disabled for this group
      create:
        role_saved: The role was saved successfully
      form:
        inscribe: Register
        description: You can register for your groups here.

  group/deleted_people:
    list:
      confirm_delete: "All data on %{person} will be permanently deleted, including participations and qualifications. Only delete this person if no one needs this data anymore."
  groups/self_registration:
    new:
      title: "Registration for %{group_name}"

  group/person_add_requests:
    deactivated: Manual approval deactivated
    activated: Manual approval activated
    global:
      no_list_entries: No pending approvals.
  group/merge:
    success: "The selected groups were merged to form the new group %{new_group_name}."
    failure: "The selected groups can't be merged."
    no_candidates: >
        There are no equal groups for merging, or you don't have the required permissions.
    group_name_missing: "Name for new group must be defined."
    no_group_selected: "Please choose a group to be merged with."
    not_allowed: "You do not have the permission to merge these groups."
    invoice_config_not_merged: >
        The invoice settings are not automatically applied. Please make the correct
        settings manually.
  group/move:
    success: "%{group} has been moved to %{target}."
    failure: "This group can't be moved or you don't have the required persmissions."
    choose_group: "Please select a group."
  group_decorator:
    archived_suffix: "(archived)"
  households:
    edit:
      title: Manage household
      shared_address_info: All people share the same address.
      placeholder_search_person: Search for and add person...
    members_table_row:
      unconfirmed_email_info: The email address must be confirmed before the person can be removed from the family.
  hitobito_log_entries:
    tabs:
      all: All
    index:
      title: Hitobito Log
    list:
      from: From
      to: Until
  import/csv_parser:
    read_error: "Error while reading from "
    encoding_error: "Unfortunately the encoding could not be recognized. Is it a binary file?"
    contains_no_data: "Contains no data"
    read_success:
      one: "%{count} record read succesfully."
      other: "%{count} records read succesfully."
  import/person_importer:
    row_with_error: "row %{row}: %{errors}"
  import/person_duplicate_finder:
    duplicates: "%{count}duplicates"
  invoices:
    filter:
      from: From
      to: To
      due_since: due since
      due_since_list:
        one_day: yesterday
        one_week: one week
        one_month: one month
    add: Create external invoice
    add_payments: Capture payment
    issued: Invoice sent
    sent: Invoice sent per e-mail
    reminder_sent: Reminded, due at %{date}(%{title})
    payed: paid
    cancel: Cancel
    destroy:
      flash:
        success: Invoice cancelled
    pdf:
      total: Total amount
      total_vat: VAT
      cost: Interim amount
      invoice_number: Invoice Nr
      invoice_date: Invoice date
      due_at: Due by
      creator: Biller
      vat_number: VAT Nr
      payment_slip_qr:
        receipt_title: Receipt
        payment_title: Payment part
        receiving_office: Acceptance point
        creditor_heading: Account / Payable to
        debitor_heading: Payable by
        esr_number_heading: Reference
        currency: Currency
        amount: Invoice
    export_enqueued: "Export is started in the background and downloaded after completion."
    evaluations:
      show:
        table:
          amount_paid: Amount paid
  invoice_configs:
    form_tabs:
      general: general
      email: Email
      layout: Layout
    update:
      flash:
        success: Invoice settings succesfully updated
        provider_initialization_failed: Set up of the payment interface %{payment_provider} failed
        provider_initialization_succeeded: Setting up the payment interface %{payment_provider} was successful
    general_fields:
      payment: "Payment"
      payment_information_help: "Listed in each invoice, can be adjusted per invoice"
      address_help: "Sender address on letter"
      payee_help: "for the payment slip"
      beneficiary_help: "for the payment slip"
      account_number_example: "Example 01-162-5"
      iban_example: "Example: CH93 0076 2011 6238 5295 7"
      variable_donation_appeal: "Variable donation call"
      donation_calculation_year_amount_explanation: Number of past years taken into account for the calculation of donations.
      donation_increase_percentage_explanation: Percentage, for the donation calculation
    reminder_fields:
      third_level: "For all following reminders"
    provider_fields:
      reset_payment_provider_warning: "If data is changed here, the initialization process of the invoice interface must be executed again."
  invoice_lists:
    form:
      recipient_info:
        one: "Invoice created for one person."
        other: "Invoice created for %{count}person(s)"
    create:
      one: "Invoice <i>%{title}</i>created."
      other: "Invoice <i>%{title}</i>created for %{count}recipients."
    create_batch: "Invoice <i>%{title}</i>is beeing created for %{count}recipients."
    update:
      zero: "Select at least one invoice."
      model_error: "Invoice %{number}not valid - %{error}."
      issued:
        one: "Invoice %{number}has been created."
        other: "%{count}invoices created."
      reminded:
        one: "Invoice %{number}has been reminded."
        other: "%{count}invoices reminded."
      send_notification:
        one: "Invoice %{number} will be sent by e-mail."
        other: "%{count}invoices will be sent by e-mail."
      invalid_state:
        one: "Invoice %{number}has already been sent."
        other: "%{count}invoices have already been created"
      issued_invalid:
        one: "Invoice %{number}has already been submitted."
        other: "%{count}invoices have been submitted."
      sent_invalid:
        one: "Invoice %{number}has already been sent."
        other: "%{count}invoices have already been sent."
      payed_invalid:
        one: "Invoice %{number}has already been paid."
        other: "%{count}invoices have already been paid."
      reminded_invalid:
        one: "Reminder %{number}has already been sent."
        other: "%{count}reminders have already been sent."
      recipient_email_invalid:
        one: "Invoice %{number} could not be sent because no recipient email is stored"
        other: "%{count}invoices could not be sent because no recipient emails are stored."
      payment_reminders_missing:
        one: "Invoice %{number}could not be reminded because reminder settings are invalid."
        other: "%{count}reminders could not be sent because reminder settings are invalid."
    destroy:
      zero: "Choose an invoice first."
      one: "Invoice cancelled"
      other: "%{count}invoices have been canceled."
  payments:
    create:
      flash:
        success: Payment of %{amount}has been registered.
  label_formats:
    global_labels: "Global label formats"
    own_labels: My label formats
    see_global_labels: "Show global labels"
    form:
      portrait: "Portrait"
      landscape: "Landscape"
    global:
      link:
        add: Create label format
    new:
      title: Create label format
  layouts:
    nav:
      sign_out: "Sign out"
    unauthorized:
      forgot_password: "Forgot your password?"
      need_confirmation_email: "Didn't receive a confirmation email?"
      main_self_registration: "No account yet? Register here."
    footer:
      available_under_license: "licensed under the"
      developed_by: "Developed by"
      source_code: "Source code"
    user_impersonation:
      info: "You are logged in as %{user}"
      end: "End imitation"
    file_download:
      wait_for_downloads: "The downloads are being prepared, please wait."
      cancel_downloads: "Cancel downloads"
    synchronization:
      wait_for_synchronization: "Your data is currently being sent to MailChimp. This may take a moment. After that, the selected list will be updated with contacts from hitobito."
      synchronization_failed: "Error (%{error}) occured while sending data to MailChimp."
      cancel_synchronization: "Cancel export"
  mailing_lists:
    global:
      link:
        add: Create mailing list
    form:
      help_additional_sender: "In addition to the administrators this e-mail may also send messages to the mailing list."
      caption_main_email: "Shipping only to main email"
      caption_main_email_with_preferred_labels: "Shipping also to main email"
      caption_subscribable: "Subscribers may subscribe/unsubscribe themselves"
      caption_subscribers_may_post: "Subscribers may write to the mailing list"
      caption_anyone_may_post: "Anyone may write to the mailing list"
      caption_delivery_report: "Send email with report to sender"
      help_preferred_labels: "If available, emails are only sent to email addresses with this designation. Email addresses that are not marked as a dispatch address are also used."
      help_mailchimp_sync: "Subscribers can be exported to the MailChimp list. This action overwrites the MailChimp list and existing contacts are deleted."
    imap_mails:
      manage: Mails
      mailboxes:
        inbox: Inbox
        spam: Spam
        failed: Failed
      move_to:
        inbox: in inbox
        spam: in spam
        failed: in Failed
      headers:
        subject: Subject
        sender: Sender
        date: Date
        state: State
        states:
          unknown_recipient: Sender unknown
          retreived: Recipient
          bulk_delivering: Will be sent
          completed: Finished
          sender_rejected: Sender rejected
          state_unavailable: No state available
      not_available: No mails available in this mailbox.
      flash:
        deleted:
          one: "Mail successfully deleted"
          other: "%{count} mails successfully deleted"
        moved:
          one: "Mail successfully moved"
          other: "%{count} mails successfully moved"
        server_error: Unable to connect to mail server, please try again later.
  mailing_list_decorator:
    may_subscribe: "Subscribers may subscribe/unsubscribe themselves"
    may_not_subscribe: "Subscribers may  <strong>not</strong> subscribe/unsubscribe themselves"
    subscribers_may_post: "Subscribers may write to the mailing list"
    subscribers_may_not_post: "Subscribers may <strong>not</strong> write to the mailing list"
    anyone_may_post: "Anyone may write to the mailing list"
    anyone_may_not_post: "<strong>Not</strong> anyone may write to the mailing list"
    delivery_report: "Sender get an email with report"
    no_delivery_report: "Sender gets no email confirmation"
    subscribe: "Log in"
    unsubscribe: "Sign out"
  messages:
    attrs:
      dispatch_infos: Processing
    actions_show:
      button_dispatch_letter: Print
      button_show_assignment: Print preview
      button_duplicate: Duplicate
      button_preview: Preview
      button_dispatch_text_message: Send
    text_message:
      fields:
        remaining_chars: Remaining characters
    table:
      infos:
        sender: "Sender: %{mail}"
        sender_rejected: Sender has been rejected
        unknown_recipient: Sender unknown
  navigation:
    menu: "Menu"
    groups: "Groups"
    events: "Events"
    courses: "Initiatives"
    admin: "Settings"
    admin/event_feed: "Integrate calendar"
    admin/oauth_authorizations: "OAuth authentifications"
    imap_mails: "Mails"
    invoices: "Invoices"
    invoices/single: "Individual invoices"
  notes:
    new_note: Add note
    note:
      created: '%{time_ago} ago'
    paginator:
      newer_notes: Newer posts
      older_notes: Older posts
  oauth:
    applications:
      form:
        help_native_redirect_uris: One redirect per line. Use <code class='bg-light'>%{native_redirect_uri}</code> for local tests.
      attrs:
        profile_endpoint_help: Profile information of the user can be obtained via this endpoint. The access token must be passed in the authorization header. The desired scope can be passed as an X-Scope header.
        profile_endpoint_example: "curl -H 'Authorization: Bearer 057b491f0ea151782f1ab3ed67dba91eaf0d59e621f312afec4d3bf81e08777a' -H 'X-Scope: email' %{url}"
    access_grants:
      list:
        title: Active %{model_name} for %{uri}
    authorizations:
      title: My Oauth authorisations
      revoke: "Access to <i>%{application}</i>has been canceled"
    tabs:
      grants: Grants
      tokens: Tokens
  payment_processes:
    description:
      header: camt.054 XML Datei
      explain_xml_format: "A camt.054 XML file is the collective posting resolution and debit and credit advice. This contains a number of different booking items which are automatically assigned to existing invoices based on the ESR number."
    invalid_file: Uploaded file is not valid.
    parsing_error: The file could not be processed (%{error})I
    created: '%{count}payments created.'
    payments:
      invalid:
        one: One valid payment has been detected.
        other: '%{count}valid payments detected.'
    show:
      amount_open: Open
      create:
        zero: Import payments
        one: Import payment
        other: "Import %{count} payments"
      icon_tooltip_invoice_missing: Could not be matched to invoice
      icon_tooltip_settles: Settles the open account
      icon_tooltip_exceeds: Exceeds open account by %{difference}
      icon_tooltip_undercuts: Undercuts open account by %{difference}
    new:
      upload_button: "Upload"
      xml_file: "XML file"
  public_events:
    show:
      meta_description: Public course registration page for Hitobito
  qualifications:
    in_years: "%{years} years"
    valid_until: "to %{date}"
    unlimited: "unlimited"
  qualification_kinds:
    global:
      link:
        add: Create qualification kind
    form:
      help_validity_in_years: "Years from the date of qualification; by the end of the relevant year"
      help_reactivateable_in_years: "Years from the expiration date"
      help_required_training_days: |
        At least this number of training days must be completed during the validity period in order to extend existing qualifications.
        These can also be split over several initiatives.
        Leave blank to ignore training days and extend qualifications immediately upon attending each relevant initiative.

    new:
      title: Create qualification kind
  paper_trail/version_decorator:
    by: "Modified by %{author}"
  person_duplicates:
    merge:
      new:
        title: Merge person
        select_person: Which data should be kept?
        merge_hint: When merging, the roles, phone no., additional emails as well as the social media entries are taken over. All other data of this person like notes, initiative registrations etc. will be deleted.
        merge_hint_invalid: This person has invalid data.
        irreversible: This process cannot be undone.
        invalid_persons: The entries can only be merged when both are valid.
        reload: Check again
      action: Merge
      success: Merge successful
    ignore:
      new:
        title: Ignore duplicate?
        confirm: Duplicate for %{person}?
        irreversible: This process cannot be undone.
      action: Ignore
      success: Duplicate successfully removed
  person:
    confirm_delete: "All Data for %{person} will be completely deleted, including any participations and qualifications. Delete this person only, if no one needs this data anymore."
    add_requests:
      body_list:
        open_requests:
          one: "1 pending approval."
          other: "%{count} pending approvals."
        request_to: Request to
        cancel: Cancel request for access
      creator:
        group:
          success: "We sent an approval request for %{person}. The role will be created as soon as the request was granted. Any additional details for the role have to entered again after the approval."
          failure: "The role could not be created, because for %{person} you need be granted access by approval. %{errors}."
        event:
          success: "We sent an approval request for %{person}. The registration will be created as soon as the request was granted. Any additional details for the registration have to entered again after the approval."
          failure: "The registration could not be created, because for %{person} you need be granted access by approval. %{errors}."
        mailing_list:
          success: "We sent an approval request for %{person}. The subscription will be created as soon as the request was granted."
          failure: "%{person} could not be added, because you need be granted access using an approval request. %{errors}."
      approve:
        success_notice: "The request for access for %{person} was granted."
        failure_notice: "The request for approval für %{person} could not be granted: %{errors}."
      reject:
        success_notice: "The request for access for %{person} has been denied."
      cancel:
        success_notice: "The request for access for %{person} has been retracted."
      status:
        group:
          approved: "The request for access for %{person} has already been granted."
          rejected: "The request for access for %{person} has already been denied."
        event:
          approved: "The request for access for %{person} has already been granted."
          rejected: "The request for access for %{person} has already been denied."
        mailing_list:
          approved: "The request for access for %{person} has already been granted."
          rejected: "The request for access for %{person} has already been denied."
    history:
      index:
        inactive_roles_title: "Inactive roles"
        qualified: "Passed"
        not_qualified: "Failed"
        training_days:
          one: "%{count} Training day"
          other: "%{count} Training days"
    family:
      fields:
        is_in_family_with: "Is part of the family of"
    csv_imports:
      description:
        header: CSV files
        example: |
            First name,Last name,e-Mail,Place,gender
            Hans,Muster,hans@beispiel.ch,Bern,m
            Vreni,Bischofsberger,vreni@beispiel.net,"Zürich, New York",f
        explain_field_names: The fields in the CSV file can be assigned to the fields in the application in the next step.
        explain_role: All people in a file will be assigned to the same role, which can be selected in the next step.
        special_fields: Special field values
        explain_special_fields_html: The following fields must contain one of the <em>italic</ em> values.
      preview_table:
        icon_tooltip_invalid: "Invalid values"
        icon_tooltip_updated: "Updating"
        icon_tooltip_created: "Recording"
        icon_tooltip_request: "is being requested"
      define_mapping:
        choose_role: "Select role"
        choose_role_help: "This role will be assigned to all imported people"
        assign_columns_to_fields: "Assign columns to fields"
        column_from_csv: "Column from CSV"
        field_in_database: "Field in database"
        preview: "Preview"
        update_behaviour: Update behavior
        keep_behaviour: >
            Only update empty values in the database with the values from the CSV
            file, existing values are preserved.
        keep_behaviour_tags: Tags will be added.
        override_behaviour: >
            Overwrite existing values in the database with the values from the CSV
            file. Empty values in the CSV file will delete existing values in the
            database.
        override_behaviour_tags: Tags will be removed or replaced.
        update_behaviour_explanation: >
            This behavior only applies to persons already existing in the database.
            New persons are created with the data from the CSV file.
      new:
        upload_button: "Upload"
        csv_file: "CSV file"
      preview:
        import_now_button: Import people now
        import_details_html: >
            The following persons will be importet with the <strong>role %{role}</strong>
            into the <strong>group %{group}</strong>.
    add_request_mailer:
      request_link: Answer request
    subscriptions:
      index:
        my_subscriptions: My Subscriptions
        available_subscriptions: Available Subscriptions
      create:
        success: <i>%{person}</i>subscribed to <i>%{mailing_list}</i>.
      destroy:
        success: <i>%{person}</i> removed from <i>%{mailing_list}</i>.
    tags:
      tag:
        category_validation:
          email_primary_invalid: Main email is invalid
          email_additional_invalid: Further email is invalid
          address_invalid: Address not in directory
    security_tools:
      index:
        account: Account
        last_sign_in_at: "Last Login:"
        no_last_sign_in: "No login recorded so far"
        person_has_2FA: This person has activated two-factor authentication.
        person_no_2FA: This person has not activated two-factor authentication.
        person_has_login: This person's email address is already registered with the system
        person_no_login: This person's email address is not registered with the system
        security_and_privacy: Security and privacy
        override_password: "Overwrite password"
        confirm_reset: "Attention: This will overwrite the password. Do you really want that?"
        groups_and_roles_that_see_me: Roles that have access to me
        load_roles_that_see_me_hint: "This may take a few seconds"
        block_person: Block Person from logging in to the system
        confirm_block_person: "Warning: This will prevent this person from logging in. Are you sure you want to do this?"
        unblock_person: Unlock email for this person
        confirm_unblock_person: "Attention: This means the person is no longer blocked. Are you sure you want to do this?"
        person_blocked: Login / Person is blocked from signing on to the system
        person_not_blocked: Login is no longer blocked on the system. The person can sign in. 
      password_override:
        flashes:
          success: The password has been overwritten. The person has been informed and can request a new password at any time using the "Forgot password" function.

      block_person:
        flashes:
          success: Login was successfully blocked.
          error: You cannot block your own login.

      unblock_person:
        flashes:
          success: Login was successfully unlocked / unblocked.
          error: You cannot unlock your own login.        

  person/csv_imports:
    invalid_file: Please select a valid CSV file.
    duplicate_keys:
      one: "%{list} was assigned more than once."
      other: "%{list} were assigned more than once."
    preview:
      new:
        one: "%{count} %{role} will be imported."
        other: "%{count} %{role} will be imported."
      updated:
        one: "%{count} %{role} will be updated."
        other: "%{count} %{role} will be updated."
      failed:
        one: "%{count} %{role} won't be imported."
        other: "%{count} %{role} won't be imported."
      requests:
        one: "%{count} %{role} will receive a request for their data. Your data will not be imported."
        other: "%{count} %{role} will receive a request for their data. Your data will not be imported."
    create:
      new:
        one: "%{count} %{role} has been imported succesfully."
        other: "%{count} %{role} have been imported succesfully."
      updated:
        one: "%{count} %{role} has been updated succesfully."
        other: "%{count} %{role} have been updated succesfully."
      failed:
        one: "%{count} %{role} has not been imported."
        other: "%{count} %{role} have not been imported."
      requests:
        one: "%{count} %{role} will receive a request for their data. Any changes from this import have to be repeated after having been granted access."
        other: "%{count} %{role} will receive a request for their data. Any changes from this import have to be repeated after having been granted access."
  people:
    send_password_instructions: Login information has been sent.
    send_password_instructions_invalid_email: Login has not been sent because email is invalid.
    years_old: (%{years} years old)
    update_email_must_be_confirmed: The changed email address must be confirmed before it becomes active. A confirmation link has been sent to %{new_mail}.    
    tabs:
      history: History
      log: log
      security_tools: Security
      colleagues: Colleagues
      invoices: Invoices
      subscriptions: Subscriptions
    actions_show:
      send_login_tooltip:
        new: The person does not have a login.<br><br>This action sends a link to set a password.
        resend: The person has received a link to set a password, but did not set one.<br><br>This action resends the link.
        reset: Person has a login.<br><br>This action sends a link to reset the password.
      impersonate_user: Imitate
      impersonate_user_tooltip: Operate hitobito as this person.
    actions_index:
      add_person: Add Person
      import_list: Import list
      person_duplicate_list: Duplicates
    add_requests:
      approve_title: "Approve request"
      reject_title: "Deny request"
    attrs:
      additional_data: More information
      events: My next events
    contact_data:
      lives_in_household_with: Lives in household with
    email_field:
      used_as_login: Is used as login
      only_changeable_by_superior: >
          The main e-mail address of a person with multiple roles can only be changed
          by a superordinate user.
    fields:
      format_birthday: (dd.mm.yyy)
    list:
      number_of_people_shown:
        one: "%{count} person displayed."
        other: "%{count} people displayed."
      number_of_people_hidden:
        one: "%{count} more person is not visible for you."
        other: "%{count} more people are not visible for you."
    log:
      no_changes: So far, no changes were recorded.
    pdf:
      cannot_fit: The addresses do not fit into the defined label format.
    print:
      name: "Name"
      address: "Address"
      email: "E-Mail"
      home_phone: "Private"
      mobile_phone: "Mobile"
    privacy_policy_acceptance_field:
      acceptance_caption:
        for_self: "I agree to the following provisions:"
        for_someone_else: "I confirm that I have obtained the consent of this person or their legal guardian for the following provisions:"
    roles:
      title: Active roles
      convertable_title: Future roles
    roles_aside:
      add_role: Add role
      set_main_group: Set main group
    tags:
      add_tag: Add tag...
      no_entry: (none)
    export_enqueued: "Export is started in the background and downloaded after completion."
    export_email_needed: "Email needed for export."
    multiselect_actions:
      role_actions:
        button: Roles
        remove: Remove roles
        move: Move roles
        add: Add role
      add_participation: Add to event
      tag_lists: Tags
      remove_tags: Remove tags
      add_tags: Add tags
    login_status:
      no_login: No Login
      login: Login is active
      blocked: blocked
      not_blocked: Not blocked
  participations:
    destroy:
      flash:
        success: Application was successfully deleted.
  people_filters:
    form:
      save_search: Save search
      save_filter: Save filter
      save_filter_placeholder: Enter a name to save this filter
      range:
        deep: Current level and below
        layer: Current level with groups
        group: Only this group
        group_deep: This group and below
      filters_qualification_validity:
        active: Only valid qualifications
        reactivateable: Valid and reactivated qualifications
        not_active: No valid qualifications
        all: All qualifications
      filters_role_kind:
        active: role was active
        created: role was made.
        deleted: role has been deleted.
    attributes:
      title: Fields
      match: contains
      equal: is equal
      greater: bigger than
      smaller: smaller than
    language:
      title: Language
      word_connector: "or"
    tag:
      title: Tags
      prompt_tag_selection: Include persons with at least one of these tags
      prompt_tag_placeholder: Tag name
    tag_absence:
      prompt_tag_absence_selection: Exclude persons with at least one of these tags
      prompt_tag_absence_placeholder: Tag name
    new:
      title: Filter persons
    range:
      prompt_range: In which range should be searched?
    role:
      title: Roles
      prompt_role_selection: Which roles should be displayed?
      prompt_role_duration_selection: Which period should be considered?
      prompt_role_duration_until: until
    qualification:
      title: Qualifications
      prompt_qualification_selection: Which qualifications should be displayed?
      prompt_validity: Which validity should the shown qualifications have?
      prompt_year: Restrict qualification year
      prompt_kind: In which area should be searched?
      start_at_year_label: Received between
      start_at_year_infix: and
      finish_at_year_label: Dulled between
      finish_at_year_infix: and
      not_enough_permissions: No permission to search persons with this filter.
    simple_radio:
      match:
        one: Person has at least one of these qualifications
        all: Person has all of these qualifications
      validity:
        active: Only currently valid qualifications
        reactivateable: Valid and reactivatable qualifications
        not_active: No valid qualifications
        all: All existing qualifications
      kind:
        deep: In the current layer and all below layers and groups
        layer: In the current layer and all its groups
        group: Only in the current group
        group_deep: In the current group and all below groups
  self_register:
    create:
      flash:
        success: You have been successfully registered
  roles:
    full_entry_label: "%{model_label} <i>%{role}</i> for <i>%{person}</i> in <i>%{group}</i>"
    role_changed: "changed %{full_entry_label} for <i>%{new_role}</i>."
    role_changed_to_group: "changed %{full_entry_label} for <i>%{new_role}</i> in <i>%{new_group}</i>."
    role_primary_group_changed: "Changed primary group to <i>%{new_group}</i>."
    form:
      add_person: Add person
      add_role_for_person: Create role for %{person}
      edit_role_for_person: Edit role for %{person}
      new_role_for_person: Create role
    person_fields:
      create_new_person: Add new person
      search_existing_person: Find existing person
      text_with_alternative_link_html: "%{text} <small>or %{link}</small>"
    info:
      role_has_permissions: "The role %{role} in the group %{group} has the following permissions:"
      role_only_public: >
          The role %{role} in the group %{group} can only view public data (groups,
          events and subscriptions; no other people).
      only_visible_from_above: This role is visible only to people in this level, not by people from higher layers.
  role_lists:
    available:
      no_entries: No roles to delete
    access_denied: Access to %{person} denied
    destroy:
      success:
        zero: No roles deleted
        one: One role has been deleted
        other: "%{count} roles have been deleted"
    create:
      success:
        zero: No roles created
        one: One role has been created
        other: "%{count} roles have been created"
      failure: Please enter a valid role
    update:
      success:
        zero: No roles moved
        one: One role has been moved
        other: "%{count} roles have been moved"
      failure: Please enter a valid role
    move:
      title: Where should these persons be moved to?
      submit: Further
    movable:
      title: Which roles should be deleted?
      submit: Move roles
    deletable:
      title: Which roles should be deleted?
      submit: Delete
    new:
      title: Where should the new roles be created?
      submit:
        one: "One role has been created"
        other: "%{count} roles created"
  tags:
    multiselect_actions:
      merge_tags: Merge
    categories:
      other: Other
      validation: Validation
  tag_lists:
    destroy:
      success:
        zero: No tags removed
        one: One tag has been removed
        other: "%{count} tags have been removed"
    create:
      success:
        zero: No tags created
        one: One tag has been created
        other: "%{count} tags have been created"
    deletable:
      title: Which tags should be deleted?
      no_entries: Tags cannot be removed
      submit: Delete
    new:
      title: Which tags should be added?
      no_entries: Tags cannot be created
      separate_multiple_tags_with_comma: Separate tags with comma
      submit:
        one: "Tags created for one person"
        other: "Tags created for %{count} persons"
  service_tokens:
    abilities:
      read: Read
    global:
      link:
        add: Add API key
  steps_component:
    next_link: Next
    prev_link: Back
  household_aside_component:
    add: Create
    manage: Manage
  subscriber:
    group:
      edit:
        title: Edit subscription
      form:
        subgroups_selectable: "Only groups within the subscription group can be selected"
        subgroups_and_siblings_selectable: "Only groups within the subscription group or within the adjacent groups from tye %{type} can be selected"
      roles:
        please_choose_group: Please select a group
      tags:
        only_add_persons_with_tags: "Only add people with one of the following tags:"
        exclude_persons_with_tags: "Exclude people with one of the following tags:"
    exclude_person:
      form:
        exclude_subscriber: "Exclude person"
    subscriber_lists:
      new:
        submit: Add
  subscriber/base:
    blank: "%{model_label} must be selected"
    taken: "%{model_label} has already been added"
  subscriber/user:
    success: "You have been successfully added to the subscription."
    failure: "You could not be added to the subscription: %{errors}"
    unsubscribed: "You have been successfully removed from the subscription."
  subscriber/exclude_person:
    success: "Subscriber %{subscriber} has been successfully excluded"
    failure: "%{subscriber} is not a subscriber"
  sheet/person/csv_import:
    title: "Import person via CSV"
  sheet/group:
    belongs_to: "belongs to"
    deleted: "(deleted)"
    layer_upwards: "< to a higher level"
  sheet/payment_process:
    title: Import XML payment file
  subscriptions:
    actions_index:
      add_person: Add person
      add_group_roles: Add group/role
      add_event: Add event
      exclude_person: "Exclude person"
    list:
      excluded_people: "Excluded people"
      export_not_allowed: "You are not allowed to export the subscribers, because it contains people outside of your authorization."
    subscription:
      only_persons_with: "Only people with:"
      persons_excluded_with: "Exclude people with:"
    export_enqueued: "Export is started in the background and downloaded after completion."
  version:
    attribute_change:
      from_to: "%{attr} has been changed from <i>%{from}</i> to <i>%{to}</i>."
      from: "%{attr} <i>%{from}</i> has been deleted."
      to: "%{attr} has been changed to <i>%{to}</i>."
    association_change:
      create: "%{model} <i>%{label}</i> has been added."
      update: "%{model} <i>%{label}</i> has been updated: %{changeset}"
      destroy: "%{model} <i>%{label}</i> has been deleted."
      person/add_request:
        create: "Access for <i>%{label}</i> requested."
        update: "Update of request for <i>%{label}</i>: %{changeset}"
        destroy: "Request for <i>%{label}</i> has been answered."
    impersonate: "Account took over from %{user}"
    impersonation_done: "Account impersonation from %{user} ended."
    household_updated: "Household %{object_changes} updated."
    remove_from_household: "%{item} removed from household %{object_changes}"
    append_to_household: "%{item} has been added to household %{object_changes}"
    person_merge: "Two persons have been merged. Deleted person:"
  tags/merge:
    success: Tags merged successfully.
  tags_merge:
    tags: Tags
    title: Merge selected tags?
    name: New name
    submit: Merge
    category: Category
  calendars:
    actions_show:
      copy_url: Copy Calendar Feed URL
    attrs:
      included_groups: Included Groups
      excluded_groups: Excluded groups
      tags: Included and excluded tags
    tags:
      or: " or "
      explanation_included:
        zero: ""
        one: "Only %{events} with tag %{tags} are included."
        other: "Only %{events} with any of the tags %{tags} are included."
      explanation_excluded:
        zero: ""
        one: "%{events} with tag %{tags} are excluded."
        other: "%{events} with one of the tags %{tags} are excluded."
  

    form:
      all_event_types: All
    tags:
      or: "or"
  views:
    pagination:
      next: ">>"
      previous: "<<"
      first: first
      last: last
      truncate: "..."
  json_api:
