-#  Copyright (c) 2012-2017, Jungwacht Blauring Schweiz. This file is part of
-#  hitobito and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito.

- title @group.to_s

- content_for(:filter, FilterNavigation::People.new(self, @group, @person_filter).to_s)

.pagination-bar
  = paginate @people

  .pagination-info
    - if @person_filter.all_count > 0
      = t('.number_of_people_shown', count: @people.total_count)
      - unless @person_filter.all_count == @people.total_count
        = muted(t('.number_of_people_hidden', count: @person_filter.all_count - @people.total_count))
    - else
      = ti(:no_list_entries)

    - if @person_add_requests.present?
      = render 'person/add_requests/body_list'

  - if @people.present?
    = Dropdown::TableDisplays.new(self).to_s

- if @people.total_count > 0
  = crud_table(data: { checkable: true }) do |t|
    - t.col(check_box_tag(:all, 0, false, { data: :multiselect })) do |i|
      - check_box_tag('ids[]', i.id, false, data: { multiselect: true })
    - t.col('') do |p|
      .profil= image_tag(p.picture.thumb.url, size: '32x32')
    - sortable_grouped_person_attr(t, last_name: true, first_name: true, nickname: true) do |p|
      %strong
        -# Any person listed can be shown
        = link_to(p.to_s(:list),
                  @person_filter.multiple_groups ? group_person_path(p.default_group_id, p) : group_person_path(@group, p))
        %br/
        = muted p.additional_name
    - t.col(t.sort_header(:roles, Role.model_name.human(count: 2))) do |p|
      = p.roles_short(@group, @person_filter.multiple_groups)
    - t.col(Person.human_attribute_name(:emails)) do |p|
      = p.all_emails(!index_full_ability?)
    - t.col(PhoneNumber.model_name.human(count: 2)) do |p|
      = p.all_phone_numbers(!index_full_ability?)
    - sortable_grouped_person_attr(t, address: false, zip_code: true, town: true) do |p|
      = p.complete_address
    - render_table_display_columns(t)

= paginate @people
= render 'multiselect_actions'
