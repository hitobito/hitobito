-#  Copyright (c) 2012-2018, Pfadibewegung Schweiz. This file is part of
-#  hitobito and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito.

= render_extensions :custom_fields, locals: { f: f }

= f.labeled(:household_key, '&nbsp;'.html_safe, class: 'row') do
  %label.checkbox.col-12
    = check_box_tag(:household, 1, f.object.household_people.present?, class: 'inline')
    %span= t('.lives_in_household_with')

  .household_key_people
    = render_household(f.object)
    - f.object.household_people.each do |person|
      = hidden_field_tag 'person[household_people_ids][]', person.id


  - display_style = 'display: none' unless f.object.household_people.present?
  - allowed = can?(:create_households, Person)

  .household_query_container.col-4{ style: display_style }
    = text_field_tag('household_query', nil,
                    placeholder: I18n.t('global.search.placeholder_person'),
                    class: 'form-control form-control-sm',
                    disabled: !allowed,
                    data: { provide: 'entity',
                            updater: 'HouseHolds.update',
                            url: query_household_path(person_id: f.object.id) })
    - unless allowed
      = f.help_block(t('.cannot_create_household'))


  - if @invalid
    .household_pleople_ids_errors.p-2
      .alert.alert-danger
        - if f.object.errors.include?(:household_people_ids)
          = simple_format(f.object.errors[:household_people_ids].join("\n"))
        - else
          = t('.update_denied', other_person: @other_person)
